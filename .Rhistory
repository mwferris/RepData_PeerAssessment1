with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz = "Singapore")
lat_time
last_time
?interval
last_time %--% arrive
interval(last_time, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
rm(list=ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "temp.csv")
x <- read.csv("temp.csv")
strsplit(names(x), split = "wgtp")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "temp.csv")
x <- read.csv("temp.csv")
y<-gsub(",","", x$Gross.domestic.product.2012)
mean(y, na.rm=TRUE)
y
str(x)
head(x)
x <- read.csv("temp.csv", skip = 5)
head(x)
x <- read.csv("temp.csv", skip = 5, header = FALSE)
head(x)
y<-gsub(",","", x$V5)
mean(y)
mean(y, na.rm = TRUE)
x$V5 <- as.numeric(x$V5)
y<-gsub(",","", x$V5)
mean(y)
y
x$V5
head(x)
x <- read.csv("temp.csv", skip = 5, header = FALSE)
x <- read.csv("temp.csv", skip = 5, header = FALSE, stringsAsFactors = FALSE)
x$v5
x
y <- as.numeric(x$V5)
y
y <- gsub(",","",x$V5)
y
mean(y)
mean(y, na.rm = TRUE)
x$V5
x
y<-x$V4
countryNames <- y
grep("United$",countryNames), 3
grep("^United",countryNames), 3
grep("United$",countryNames)
grep("^United",countryNames)
edu <- read.csv("edu.csv")
gdp <- read.csv("gsp.csv")
gdp <- read.csv("gdp.csv")
names(edu)
edu <- read.csv("edu.csv")
gdp <- read.csv("gdp.csv")
names(edu)
names(gdp)
x <- merge(edu, gdp, by.x = "CountryCode", by.y = "country")
grep("Fiscal year end: June *", x = x)
grep("Fiscal year end: June *", x = x)
grep("Fiscal year end: June *", x = x$Special.Notes)
len<-grep("Fiscal year end: June *", x = x$Special.Notes)
length(len)
library(quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN", auto.assign = FALSE)
sampleTimes = index(amzn)
str(sampletimes)
str(sampleTimes)
grep("2012*", sampleTimes)
q<-grep("2012*", sampleTimes)
length(q)
year(sampleTimes)
q <- year(sampleTimes)
table(q)
z <- as.data.frame(z)
z <- c()
z<- as.data.frame(z)
z$years <- year(sampleTimes)
dim(z) < c(2638, -)
dim(z) < c(2638, 0)
dim(z) <- c(2638, 0)
z$years <- year(sampleTimes)
dim(z)
dim(z)<- c(238, 1)
q <- as.data.frame(q)
names(q)
q
colnames(q) <- "year"
str(q)
q$day <- day(sampleTimes)
table(q)
q$wkday <- lubridate::wday(sampleTimes)
table(q$year, q$wkday)
rm(list=ls())
source('C:/Users/mferris/OneDrive/Documents/Coursera/Data Science/Getting and Cleaning Data/getting_cleaning_data_project/run_analysis.R')
source('C:/Users/mferris/OneDrive/Documents/Coursera/Data Science/Getting and Cleaning Data/getting_cleaning_data_project/run_analysis.R')
write.table(tidy_summary, row.names = FALSE, file = tidydata)
write.table(tidy_summary, row.names = FALSE, file = "tidydata")
?write.table
write.table(tidy_summary, row.names = FALSE, file = "tidydata.txt")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(nlme())
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
ggplot(movies, aes(votes, rating))
library(ggplot2movies)
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
vbline(h=1.5, col = "blue")
sdf
s()
line()
d
help
abline(h=1.5, col="blue")
abline(v=.4, col="red")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(cFsm)
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple", pch = 3, cex = 2, lwd = 2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col = cols1[nweClust])
points(x, y, pch=19, cex=2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
point(x, y, pch=19, cex=2, col=cols1[newClust2])
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex=2)
points(kmObj$centers, kmObj$centers, col = c("black", "red", "green"), pch = 3, lwd = 3, cex = 3)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, lwd = 3, cex = 3)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataframe, 6)$cluster, pch=19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch=19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch=19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch=19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local= TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd%V[,1]
svd$V[,1]
svd1$V[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2$v[,c(1,2)]
svd2$d
dim(faceData)
a1<- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1<- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<- (svd1$u[,2] * svd1$d[2]) %*% t(svd1$v[,2])
a2<- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1::2])
a2<- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject ==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- sub1[,1:3]
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon)
)
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(c(sub1[,10:12], maxCon))
e
wr
help
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <-kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <-kmeans(sub1[,-c(562,563)], centers=6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab = "Walkdown Cluster")
setwd("C:/Users/mferris/OneDrive/Documents/Coursera/Data Science/Reproducible Research")
setwd("C:/Users/mferris/OneDrive/Documents/Coursera/Data Science/Reproducible Research/repro_research_project_1")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = "movementdata.zip")
unzip("movementdata.zip")
file.remove("activity.zip")
file.remove("movementdata.zip")
?read.csv
?read.table
read.csv(destFile, header = TRUE)
read.csv("activity.csv", header = TRUE)
activity <- read.csv("activity.csv", header = TRUE)
head(activity)
activity <- read.csv("activity.csv", header = TRUE, na.strings = "NA")
is.na(activity)
class(activity)
lapply(X = activity, class)
activity <- read.csv(destFile, header = TRUE,
na.strings = "NA", colClasses = c("Numeric", "Date", "Numeric"))
destFile = "activity.zip"
activity <- read.csv(destFile, header = TRUE,
na.strings = "NA", colClasses = c("Numeric", "Date", "Numeric"))
destFile <- "activity.csv"
activity <- read.csv(destFile, header = TRUE,
na.strings = "NA", colClasses = c("Numeric", "Date", "Numeric"))
head(activity)
str(activity)
activity <- read.csv(destFile, header = TRUE,
na.strings = "NA", colClasses=c(NA, "Date", NA))
str(activity)
hist(activity)
library(ggplot2)
p <- ggplot(activity, aes(x = date, y=steps)) + geom_histogram()
plot(p)
p
p <- ggplot(activity, aes(x = date)) + geom_histogram()
p
p <- ggplot(activity, aes(x = date, y=steps)) + geom_histogram()
activity$date[-1]
activity$date[-1,]
activity$date[length(activity$date)]
tail(activity$date)
datediff(activity$date[1], activity$date[length(activity$date)])
difftime(activity$date[1], activity$date[length(activity$date)])
difftime(activity$date[length(activity$date)], activity$date[1], units = d )
difftime(activity$date[length(activity$date)], activity$date[1], units = "d" )
d <- difftime(activity$date[length(activity$date)], activity$date[1], units = "d" )
d
?diff.Date
diff.date(c(activity$date[1],activity$date[length(activity$date)]))
diff.Date(c(activity$date[1],activity$date[length(activity$date)]))
ggplot(activity, aes(x = date)) + geom_histogram(bins=60)
str(activity)
ggplot(activity, aes(x = date), na.rm=TRUE) + geom_histogram(bins=60)
activity$interval <- NULL
ggplot(activity, aes(x = date), na.rm=TRUE) + geom_histogram(bins=60)
ggplot(activity, aes(x = date), na.rm=TRUE) + geom_histogram(bins=60)
activity <- read.csv(destFile, header = TRUE,
na.strings = "NA", colClasses=c(NA, "Date", NA))
ggplot(activity, aes(x = steps), na.rm=TRUE) + geom_histogram(bins=60)
setwd("C:/Users/mferris/OneDrive/Documents/Coursera/Data Science/Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
rm(list=ls())
activity <- read.csv(destFile, header = TRUE,
na.strings = "NA", colClasses=c(NA, "Date", NA))
activity <- read.csv("activity.csv", header = TRUE,
na.strings = "NA", colClasses=c(NA, "Date", NA))
library(reshape2)
str(activity)
m <- melt(activity, id.vars = c("date", "interval"), na.rm = TRUE)
d <- dcast(m, interval ~sum(steps))
d <- dcast(m, interval ~ sum(variable))
head(m)
str(m)
d <- dcast(m, interval ~ variable)
d <- dcast(m, interval ~ variable, formula = sum())
d <- dcast(m, interval ~ variable, formula = sum
)
d <- dcast(m, interval ~ variable, formula = sum)
d <- dcast(m, interval ~ value, formula = sum)
d <- dcast(m, interval ~ variable, fun.aggregate = sum)
head(d)
ggplot(d, aes(x = steps)) + geom_histogram()
d <- dcast(m, date ~ variable, fun.aggregate = sum)
ggplot(d, aes(x = steps)) + geom_histogram()
ggplot(d, aes(x = steps)) + geom_histogram() + ggtitle("Steps per day")
ggplot(d, aes(x = steps)) + geom_histogram() + ggtitle("Steps per Day")
ggplot(d, aes(x = steps)) + geom_histogram(bins=15) + ggtitle("Steps per Day")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day")
ggplot(d, aes(x = steps)) + geom_histogram() + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("./figs/StepsPerDay.png")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps))
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps), color= "red", lwd = 3)
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps), color= "red", lwd = 2)
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps), color= "red", lwd = 2) +geom_vline(xintercept = median(d$steps), color= "green", lwd = 2)
mean(d$steps)
median(d$steps)
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps), color= "red", lwd = 2) +geom_vline(xintercept = median(d$steps), color= "green")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps), color= "red") +geom_vline(xintercept = median(d$steps), color= "green")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) + ggtitle("Steps per Day") +
theme(plot.title = element_text(hjust = 0.5)) +geom_vline(xintercept = mean(d$steps), color= "red") +geom_vline(xintercept = median(d$steps), color= "green", lty = "dashed")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day", subtitle = paste0("Mean = ", mean(d$steps),
", Median = ", median(d$steps))) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = mean(d$steps), color= "red") +
geom_vline(xintercept = median(d$steps), color= "green", lty = "dashed")
format(round(mean(d$steps), 2))
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day", subtitle = paste0("Mean = ", format(round(mean(d$steps), 2)),
", Median = ", median(d$steps))) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = mean(d$steps), color= "red") +
geom_vline(xintercept = median(d$steps), color= "green", lty = "dashed")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day", subtitle = paste0("Mean = ", format(round(mean(d$steps), 2)),
", Median = ", median(d$steps))) +
geom_vline(xintercept = mean(d$steps), color= "red") +
geom_vline(xintercept = median(d$steps), color= "green", lty = "dashed")
ggsave("./figs/StepsPerDay.png")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day", subtitle = paste0("Mean = ", format(round(mean(d$steps), 2)),
", Median = ", median(d$steps))) +
geom_vline(xintercept = mean(d$steps), color= "red") +
geom_vline(xintercept = median(d$steps), color= "green", lty = "dashed")
ggsave("./figs/StepsPerDay.png")
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day", subtitle = paste0("Mean = ", format(round(mean(d$steps), 2)),
", Median = ", median(d$steps)))
ggsave("./figs/StepsPerDay.png")
m1<-m
rm(m)
d1 <- dcast(m1, interval ~ variable, fun.aggregate = average)
d1 <- dcast(m1, interval ~ variable, fun.aggregate = mean)
rm(d)
ggplot(d1, aes(x=interval, y=steps)) + geom_line()
ggplot(d2, aes(x=interval, y=steps)) + geom_line() +
ggplot("Mean steps per interval")
d2 <- dcast(m1, interval ~ variable, fun.aggregate = mean)
m<-1
m<-m1
rm(m1)
d2 <- dcast(m, interval ~ variable, fun.aggregate = mean)
ggplot(d2, aes(x=interval, y=steps)) + geom_line() +
ggplot("Mean steps per interval")
d2 <- dcast(m, interval ~ variable, fun.aggregate = mean)
ggplot(d2, aes(x=interval, y=steps)) + geom_line() +
ggtitle("Mean steps per interval")
d2 <- dcast(m, interval ~ variable, fun.aggregate = mean)
ggplot(d2, aes(x=interval, y=steps)) + geom_line() +
ggtitle("Mean steps per interval")
max(d2$steps)
]d2$interval[max(d2$steps)
]d2$interval[max(d2$steps)]
d2$interval[max(d2$steps)]
d2$interval[d2$steps == max(d2$steps)]
mean(is.na(activity))
mean(is.na(activity$steps))
sum(is.na(activity))
sum(is.na(activity$date))
sum(is.na(activity$interval))
activity[is.na(activity$steps),]
activity$steps[is.na(activity$steps),]
activity$steps[is.na(activity$steps)]
activity$steps[is.na(activity$steps),]
activity[is.na(activity$steps),]
a <- activity
a[is.na(a$steps),]
library(Hmisc)
a <- with(activity, impute(steps, mean))
head(a)
rm(a)
a <- activity
a$steps <- with(a, impute(steps, mean))
head(a)
?impute
rm(a)
library(dplyr)
a <- activity
a %>% group_by(interval) %>% mutate_each(funs(replace(.,which(is.na(.)), mean(., na.rm=TRUE))), starts_with("steps"))
a %>% group_by(interval) %>% mutate_all(funs(replace(.,which(is.na(.)), mean(., na.rm=TRUE))), starts_with("steps"))
a %>% group_by(interval) %>% mutate_all(funs(replace(.,which(is.na(.)), mean(., na.rm=TRUE))), starts_with("steps"))
a %>% group_by(interval) %>% mutate_each(funs(replace(.,which(is.na(.)), mean(., na.rm=TRUE))), starts_with("steps"))
imputed_activity <- activity %>%
group_by(interval) %>%
mutate_each(funs(replace(.,which(is.na(.)), mean(., na.rm=TRUE))),
starts_with("steps"))
m_imput <- melt(imputed_activity, id.vars = c("date", "interval"), na.rm = TRUE)
d_imput <- dcast(m_imput, date ~ variable, fun.aggregate = sum)
ggplot(d, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day (with imputed value)")
p3 <- ggplot(d_input, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day (with imputed value)")
p3 <- ggplot(d_imput, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day (with imputed value)")
p3
p3 <- ggplot(d_imput, aes(x = steps)) + geom_histogram(bins=20) +
ggtitle("Steps per Day (with imputed value)")
p3
mean(d_imput$steps)
median(d_imput$steps)
?dplyr
weekdays(a$date)
?weekdays
grepl("S(at|un)", weekdays(a$date) )
sum(grepl("S(at|un)", weekdays(a$date) ))
count(a$date)
length(a$date)
x<-grepl("S(at|un)", weekdays(a$date) ))
x<-grepl("S(at|un)", weekdays(a$date))
a$day <- grepl("S(at|un)", weekdays(a$date))
dplyr(transmute(a, daytype = if day == FALSE then "weekday" else "weekend"))
dplyr(transmute(a, daytype = (if day == FALSE then "weekday" else "weekend")))
dplyr(transmute(a, daytype = if_else(day==TRUE, "weekend", "weekday"))
)
transmute(a, daytype = if_else(day==TRUE, "weekend", "weekday"))
str(a)
?transmute
mutate(a, daytype = if_else(day==TRUE, "weekend", "weekday"))
imputed_activity <- imputed_activity %>% mutate(daytype = if_else(day==TRUE,
"weekend", "weekday"))
imputed_activity$temp <- grepl("S(at|un)", weekdays(a$date))
imputed_activity <- imputed_activity %>% mutate(daytype = if_else(temp==TRUE,
"weekend", "weekday"))
imputed_activity$temp <- NULL
str(imputed_activity)
head(imputed_activity)
ggplot(imputed_activity, aes(x=date, y=steps)) + geom_line()
ggplot(imputed_activity, aes(x=date, y=steps)) + geom_area()
ggplot(imputed_activity, aes(x=date, y=steps)) + geom_line()
m4 <- melt(imputed_activity, id.vars = c("date", "interval", "daytype"))
d4 <- dcast(m4, interval + daytype ~ variable, fun.aggregate = mean)
head(d4)
ggplot(d4, aes(x=interval, y=steps)) + geom_line() + facet_wrap(~daytype)
ggplot(d4, aes(x=interval, y=steps)) + geom_line() + facet_wrap(~daytype, nrow = 2)
ggplot(d4, aes(x=interval, y=steps)) + geom_line() + facet_wrap(~daytype, nrow = 2) + theme_minimal()
ggplot(d4, aes(x=interval, y=steps)) + geom_line() + facet_wrap(~daytype, nrow = 2) + theme_classic()
ggplot(d4, aes(x=interval, y=steps)) + geom_line() + facet_wrap(~daytype, nrow = 2) + theme_grey()
ggplot(d4, aes(x=interval, y=steps)) + geom_line() + facet_wrap(~daytype, nrow = 2) + theme_classic()
